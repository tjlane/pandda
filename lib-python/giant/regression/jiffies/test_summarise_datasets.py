import giant.logs as lg
logger = lg.getLogger(__name__)

import os

from giant.paths import is_available
from giant.regression.jiffies import run_jiffy, check_files_exist

from giant.jiffies import summarise_datasets

from pytest import fixture
@fixture
def example_data(tmpdir):

    from giant.resources.test_data import get_test_data
    pdbs = get_test_data(
        str(tmpdir),
        n = 5,
    )
    return pdbs

def test_summarise_datasets(example_data, tmpdir):

    pdb_files = example_data
    mtz_files = [p.replace('.pdb', '.mtz') for p in pdb_files]

    log_file = os.path.join(str(tmpdir), 'output.log')

    args = pdb_files + mtz_files + [
        'column_label=F',
        'log_file={}'.format(log_file),
    ]

    run_jiffy(
        args = args,
        module = summarise_datasets,
    )

    check_files_exist([log_file])

    log_contents = open(log_file, 'r').read()

    assert (
        "|---------------------|--------------------|--------------------|--------------------|--------------------|--------------------|--------------------|--------------------|\n"
        "|                     |        Min         |   Lower Quartile   |       Median       |   Upper Quartile   |        Max         |        Mean        |    Standard Dev    |\n"
        "|---------------------|--------------------|--------------------|--------------------|--------------------|--------------------|--------------------|--------------------|\n"
        "| R-work              |       0.178        |       0.180        |       0.184        |       0.185        |       0.185        |       0.183        |       0.003        |\n"
        "| R-free              |       0.204        |       0.207        |       0.210        |       0.215        |       0.219        |       0.211        |       0.005        |\n"
        "|---------------------|--------------------|--------------------|--------------------|--------------------|--------------------|--------------------|--------------------|\n"
        "|                     |        Min         |   Lower Quartile   |       Median       |   Upper Quartile   |        Max         |        Mean        |    Standard Dev    |\n"
        "|---------------------|--------------------|--------------------|--------------------|--------------------|--------------------|--------------------|--------------------|\n"
    ).strip() in log_contents

    assert (
        "|---------------------|--------------------|--------------------|--------------------|--------------------|--------------------|--------------------|--------------------|\n"
        "|                     |        Min         |   Lower Quartile   |       Median       |   Upper Quartile   |        Max         |        Mean        |    Standard Dev    |\n"
        "|---------------------|--------------------|--------------------|--------------------|--------------------|--------------------|--------------------|--------------------|\n"
        "| Resolution (high)   |       1.655        |       1.662        |       1.772        |       1.812        |       1.837        |       1.744        |       0.079        |\n"
        "| Resolution (low)    |       62.310       |       62.426       |       62.544       |       62.584       |       62.616       |       62.513       |       0.117        |\n"
        "|---------------------|--------------------|--------------------|--------------------|--------------------|--------------------|--------------------|--------------------|\n"
        "|                     |        Min         |   Lower Quartile   |       Median       |   Upper Quartile   |        Max         |        Mean        |    Standard Dev    |\n"
        "|---------------------|--------------------|--------------------|--------------------|--------------------|--------------------|--------------------|--------------------|\n"
        "| Unit cell - vol     |     455472.790     |     456947.703     |     458426.395     |     459867.434     |     460589.377     |     458411.334     |      1865.359      |\n"
        "| Unit cell - a       |       81.403       |       81.716       |       82.101       |       82.239       |       82.351       |       82.003       |       0.356        |\n"
        "| Unit cell - b       |       96.144       |       96.340       |       96.690       |       96.799       |       96.831       |       96.594       |       0.275        |\n"
        "| Unit cell - c       |       57.784       |       57.812       |       57.889       |       57.928       |       57.955       |       57.874       |       0.065        |\n"
        "| Unit cell - alpha   |       90.000       |       90.000       |       90.000       |       90.000       |       90.000       |       90.000       |       0.000        |\n"
        "| Unit cell - beta    |       90.000       |       90.000       |       90.000       |       90.000       |       90.000       |       90.000       |       0.000        |\n"
        "| Unit cell - gamma   |       90.000       |       90.000       |       90.000       |       90.000       |       90.000       |       90.000       |       0.000        |\n"
        "|---------------------|--------------------|--------------------|--------------------|--------------------|--------------------|--------------------|--------------------|\n"
        "|                     |        Min         |   Lower Quartile   |       Median       |   Upper Quartile   |        Max         |        Mean        |    Standard Dev    |\n"
        "|---------------------|--------------------|--------------------|--------------------|--------------------|--------------------|--------------------|--------------------|\n"
        "| Wavelength          |       0.920        |       0.920        |       0.920        |       0.920        |       0.920        |       0.920        |       0.000        |\n"
        "|---------------------|--------------------|--------------------|--------------------|--------------------|--------------------|--------------------|--------------------|\n"
        "|                     |        Min         |   Lower Quartile   |       Median       |   Upper Quartile   |        Max         |        Mean        |    Standard Dev    |\n"
        "|---------------------|--------------------|--------------------|--------------------|--------------------|--------------------|--------------------|--------------------|\n"
    ).strip() in log_contents

    assert (
        "|---------------------|--------------------|--------------------|--------------------|--------------------|--------------------|--------------------|--------------------|\n"
        "|                     |        Min         |   Lower Quartile   |       Median       |   Upper Quartile   |        Max         |        Mean        |    Standard Dev    |\n"
        "|---------------------|--------------------|--------------------|--------------------|--------------------|--------------------|--------------------|--------------------|\n"
        "| F                   |     20114.000      |     21091.500      |     22372.000      |     26054.000      |     27005.000      |     23332.600      |      2715.680      |\n"
        "|---------------------|--------------------|--------------------|--------------------|--------------------|--------------------|--------------------|--------------------|\n"
        "|                     |        Min         |   Lower Quartile   |       Median       |   Upper Quartile   |        Max         |        Mean        |    Standard Dev    |\n"
        "|---------------------|--------------------|--------------------|--------------------|--------------------|--------------------|--------------------|--------------------|\n"
    ).strip() in log_contents
